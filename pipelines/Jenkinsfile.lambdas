void setBuildStatus(String message, String state) {
  step([
      $class: "GitHubCommitStatusSetter",
      reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/Enterprise-CMCS/demos"],
      commitShaSource: [$class: "ManuallyEnteredShaSource", sha: env.GIT_COMMIT],
      contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "something"],
      errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
      statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ],
      targetUrl: env.BUILD_URL
  ]);
}

pipeline {
  agent {
    kubernetes { 
      yaml kubeBlock(containerNames:["node", "scanner","snyk"])
    }
  }

  options {
    disableConcurrentBuilds(abortPrevious: true)
  }

  stages {
    stage('Lambdas - Snyk - All') {
      steps { echo "skip"}
    }

    stage('Lambdas - Test - All') {
      steps { echo "skip"}
    }

    stage('Lambdas - Sonar Scan') {
      steps { echo "skip" }
    }
  }

  post {
    success {
      setBuildStatus("Build succeeded (lambdas)", "SUCCESS")
    }

  }
}
