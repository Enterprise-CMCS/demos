export type LogLevel = "INFO" | "ERROR";

export type EventType =
  "LOGIN_SUCCEEDED"
  | "LOGIN_FAILED"
  | "LOGOUT_SUCCEEDED"
  | "LOGOUT_FAILED"
  | "CREATE_DEMONSTRATION_SUCCEEDED"
  | "CREATE_DEMONSTRATION_FAILED"
  | "CREATE_EXTENSION_SUCCEEDED"
  | "CREATE_EXTENSION_FAILED"
  | "CREATE_AMENDMENT_SUCCEEDED"
  | "CREATE_AMENDMENT_FAILED"
  | "EDIT_DEMONSTRATION_SUCCEEDED"
  | "EDIT_DEMONSTRATION_FAILED"
  | "DELETE_DEMONSTRATION_SUCCEEDED"
  | "DELETE_DEMONSTRATION_FAILED"
  | "DELETE_DOCUMENT_SUCCEEDED"
  | "DELETE_DOCUMENT_FAILED";


type EventLogLevelMap = {
  [K in EventType]: LogLevel;
};

const eventLogLevelMap: EventLogLevelMap = {
  LOGIN_SUCCEEDED: "INFO",
  LOGIN_FAILED: "ERROR",
  LOGOUT_SUCCEEDED: "INFO",
  LOGOUT_FAILED: "ERROR",
  CREATE_DEMONSTRATION_SUCCEEDED: "INFO",
  CREATE_DEMONSTRATION_FAILED: "ERROR",
  CREATE_EXTENSION_SUCCEEDED: "INFO",
  CREATE_EXTENSION_FAILED: "ERROR",
  CREATE_AMENDMENT_SUCCEEDED: "INFO",
  CREATE_AMENDMENT_FAILED: "ERROR",
  EDIT_DEMONSTRATION_SUCCEEDED: "INFO",
  EDIT_DEMONSTRATION_FAILED: "ERROR",
  DELETE_DEMONSTRATION_SUCCEEDED: "INFO",
  DELETE_DEMONSTRATION_FAILED: "ERROR",
  DELETE_DOCUMENT_SUCCEEDED: "INFO",
  DELETE_DOCUMENT_FAILED: "ERROR",
};

export const ALL_EVENT_TYPES: EventType[] = Object.keys(eventLogLevelMap) as EventType[];

export const getLogLevelForEventType = (eventType: EventType): LogLevel => {
  return eventLogLevelMap[eventType];
};
